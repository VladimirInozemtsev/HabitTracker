#!/usr/bin/env python
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è API
"""
import os
import django
from datetime import date, timedelta, datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'habit_tracker.settings')
django.setup()

from users.models import User
from habits.models import HabitGroup, Habit, HabitLog
from analytics.models import UserAnalytics
from payments.models import Subscription

def create_demo_data():
    """–°–æ–∑–¥–∞–µ–º –¥–µ–º–æ –¥–∞–Ω–Ω—ã–µ"""
    print("üîß –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ –¥–∞–Ω–Ω—ã–µ...")
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user = User.objects.create_user(
        username='demo',
        email='demo@example.com',
        password='demo12345',
        first_name='–î–µ–º–æ',
        last_name='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
    )
    print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {user.username}")
    
    # –°–æ–∑–¥–∞–µ–º –≥—Ä—É–ø–ø—ã –ø—Ä–∏–≤—ã—á–µ–∫
    groups = []
    group_data = [
        {'name': '–£—Ç—Ä–æ', 'color': '#FF6B6B', 'icon': 'üåÖ'},
        {'name': '–ó–¥–æ—Ä–æ–≤—å–µ', 'color': '#4ECDC4', 'icon': 'üí™'},
        {'name': '–†–∞–±–æ—Ç–∞', 'color': '#45B7D1', 'icon': 'üíº'},
        {'name': '–í–µ—á–µ—Ä', 'color': '#96CEB4', 'icon': 'üåô'},
    ]
    
    for i, data in enumerate(group_data):
        group = HabitGroup.objects.create(
            user=user,
            name=data['name'],
            color=data['color'],
            icon=data['icon'],
            order=i
        )
        groups.append(group)
        print(f"‚úÖ –ì—Ä—É–ø–ø–∞ —Å–æ–∑–¥–∞–Ω–∞: {group.name}")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≤—ã—á–∫–∏
    habits = []
    habit_data = [
        {
            'name': '–£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞',
            'group': groups[0],
            'habit_type': 'boolean',
            'frequency': 'daily',
            'target_value': None,
            'description': '15 –º–∏–Ω—É—Ç —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π'
        },
        {
            'name': '–ü–∏—Ç—å –≤–æ–¥—É',
            'group': groups[1],
            'habit_type': 'numeric',
            'frequency': 'daily',
            'target_value': 2.0,
            'unit': '–ª–∏—Ç—Ä–∞',
            'description': '–í—ã–ø–∏–≤–∞—Ç—å 2 –ª–∏—Ç—Ä–∞ –≤–æ–¥—ã –≤ –¥–µ–Ω—å'
        }        
    ]
    
    for data in habit_data:
        habit = Habit.objects.create(
            user=user,
            group=data['group'],
            name=data['name'],
            description=data['description'],
            habit_type=data['habit_type'],
            frequency=data['frequency'],
            target_value=data['target_value'],
            unit=data.get('unit', '')
        )
        habits.append(habit)
        print(f"‚úÖ –ü—Ä–∏–≤—ã—á–∫–∞ —Å–æ–∑–¥–∞–Ω–∞: {habit.name}")
    
    # –°–æ–∑–¥–∞–µ–º –ª–æ–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 14 –¥–Ω–µ–π
    print("\nüìä –°–æ–∑–¥–∞–µ–º –ª–æ–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è...")
    for i in range(14):
        log_date = date.today() - timedelta(days=i)
        print(f"–°–æ–∑–¥–∞–µ–º –ª–æ–≥ –¥–ª—è –¥–∞—Ç—ã: {log_date}")
        
        for habit in habits:
            # –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            import random
            
            # –†–∞–∑–Ω—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏ –∏–º–µ—é—Ç —Ä–∞–∑–Ω—É—é –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            if habit.name == '–ü–∏—Ç—å –≤–æ–¥—É':
                completion_chance = 0.8  # 80% –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            elif habit.name == '–£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞':
                completion_chance = 0.6  # 60% –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            elif habit.name == '–ß–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏':
                completion_chance = 0.7  # 70% –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            else:
                completion_chance = 0.5  # 50% –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            
            if random.random() < completion_chance:
                status = 'completed'
                if habit.habit_type == 'numeric':
                    # –°–ª—É—á–∞–π–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 50% –¥–æ 120% –æ—Ç —Ü–µ–ª–∏
                    target = float(habit.target_value)
                    value = target * random.uniform(0.5, 1.2)
                elif habit.habit_type == 'timer':
                    # –°–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç 50% –¥–æ 150% –æ—Ç —Ü–µ–ª–∏
                    target = float(habit.target_value)
                    value = target * random.uniform(0.5, 1.5)
                else:
                    value = 1
            else:
                status = 'skipped'
                value = None
            
            HabitLog.objects.create(
                habit=habit,
                date=log_date,
                status=status,
                value=value,
                notes=f'–õ–æ–≥ –∑–∞ {log_date.strftime("%d.%m.%Y")}'
            )
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {14 * len(habits)} –ª–æ–≥–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è")
    
    # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
    analytics = UserAnalytics.objects.create(
        user=user,
        total_days_active=14,
        last_active_date=date.today(),
        monday_completions=8,
        tuesday_completions=9,
        wednesday_completions=7,
        thursday_completions=10,
        friday_completions=8,
        saturday_completions=6,
        sunday_completions=5
    )
    print(f"‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∞")
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    subscription = Subscription.objects.create(
        user=user,
        subscription_type='premium',
        status='active',
        start_date=datetime.now(),
        end_date=datetime.now() + timedelta(days=30),
        amount=299.00,
        currency='RUB'
    )
    print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞")
    
    print(f"\nüéâ –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!")
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: demo / demo12345")
    print(f"üì± UUID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.id}")
    print(f"üìä –ü—Ä–∏–≤—ã—á–µ–∫: {len(habits)}")
    print(f"üìà –õ–æ–≥–æ–≤: {14 * len(habits)}")
    
    return user, groups, habits

if __name__ == '__main__':
    create_demo_data()
